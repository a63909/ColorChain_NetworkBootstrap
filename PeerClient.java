package com.example.tamarashadow.core;

import org.java_websocket.WebSocket;
import org.java_websocket.client.WebSocketClient;
import org.java_websocket.handshake.ServerHandshake;

import java.net.URI;
import java.util.ArrayList;
import java.util.List;

public class PeerClient extends WebSocketClient {

    private static final List<WebSocket> clients = new ArrayList<>();


    public PeerClient(URI serverUri) {
        super(serverUri);
    }

    public static List<WebSocket> getAllClients() {
        return new ArrayList<>(clients); // clients –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–º –ø–æ–ª–µ–º –≤ PeerClient
    }

    @Override
    public void onOpen(ServerHandshake handshakedata) {
        clients.add(this); // –µ—Å–ª–∏ this —è–≤–ª—è–µ—Ç—Å—è WebSocket
    }


    @Override
    public void onMessage(String message) {
        System.out.println("[üì®] –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç —É–∑–ª–∞: " + message);
        // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –±–ª–æ–∫–∞ / —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
    }

    @Override
    public void onClose(int code, String reason, boolean remote) {
        System.out.println("[‚ùå] –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å —É–∑–ª–æ–º –∑–∞–∫—Ä—ã—Ç–æ: " + reason);
    }

    @Override
    public void onError(Exception ex) {
        System.out.println("[üí•] –û—à–∏–±–∫–∞ –∫–ª–∏–µ–Ω—Ç–∞: " + ex.getMessage());
    }

    public void sendMessage(String msg) {
        send(msg);
        System.out.println("[üì§] –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ: " + msg);
    }
}
